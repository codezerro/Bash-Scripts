Basic Command:
chmod  → change mood of file 
touch  → create a file

Bash:
Variable:
→


File Operators(tests):
-d FILE   True if file is a directory.
-e FILE   True if file exists.
-f FILE   True if file is exists and is  a  regular file.
-r FILE   True if file is readable by you.
-s FILE   True if file exists and  is not empty.
-w FILE   True if file is writeable by you.
-x FILE   True if file is executable by you.


String Operators(test):
-z STRING  True if string is empty.
-n STRING True if string is not empty.
STRING1 = STRING2
	True if the strings are equal
STRING1! = STRING2
	True is the strings are not equal

Arithmatic operators (tests):
arg1 -eq arg2 True if arg1 is equal to arg2.
arg1 -ne arg2 True if arg1 is equal not to arg2.

arg1 -lt  arg2 True if arg1 is less than arg2.
arg1 -le  arg2 True if arg1 is less than or equal arg2.

arg1 -gt  arg2 True if arg1 is greater than arg2.
arg1 -ge  arg2 True if arg1 is greater than and equal to  arg2.

Operator:
	&& → -a
	|| → -o



Arithmatic operations :
num1=23
num2=10

echo $((num1+num2))
echo $((num1-num2))
echo $((num1*num2))
echo $((num1/num2))
…………………………………
echo $(expr $num1 + $num2 )
echo $(expr $num1 - $num2 )
echo $(expr $num1 \* $num2 )
echo $(expr $num1 / $num2 )

Float number :
echo "20.5+5" | bc
echo "20.5-5" | bc
echo "20.5*5" | bc
echo "scale=20;20.5/5" | bc
echo "20.5%5" | bc


The if- statement:

If [ condition-is-true ]
Then 
Command 1
Command 2
command 3
elif [ condition-is-true ]
	Command 5
else 
	Command 6
fi

Input user:  read variableName

Flag: 
-p → allow enter input same line
 Example: read -p "user name : " name
-sp → allow input silent
Example: read -sp 'password : ' password
-a → input array 
Example:read -a names
echo "your name is ${names[0]} , ${names[1]} "




























$BASH
$BASH_VERSION
$HOME
$PWD
$REPLY → buit in variable that catch input value
\c → escape the line cursor -e

Arguments :
1.echo $0 $1 $2 $3  “ > echo  $0 $1 $2 $3 ” 
2.  args=("$@") → pass all arguments
echo ${args[0]}  ${args[1]}  ${args[2]}
echo $@  → print all args value 
echo $# → count the numbers of args





arr=[2,5,8] goal =13/10

0000
0001
0010
0011
0100
0101
0111
1111




011
101




























